{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhu\\\\OneDrive\\\\Desktop\\\\Musync\\\\Musync\\\\frontend\\\\src\\\\components\\\\ParticleBackground.js\",\n  _s = $RefreshSig$();\n// src/components/ParticleBackground.jsx\nimport React, { useCallback, useMemo } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\"; // Using loadSlim for a smaller bundle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = ({\n  theme\n}) => {\n  _s();\n  // useCallback memoizes the init function to prevent unnecessary re-initializations\n  const particlesInit = useCallback(async engine => {\n    await loadSlim(engine);\n  }, []);\n\n  // useMemo memoizes the options object for performance, re-creating only if 'theme' changes\n  const particlesOptions = useMemo(() => {\n    return {\n      background: {\n        color: {\n          value: \"transparent\" // Particles will float over your existing background color/gradient\n        }\n      },\n      fpsLimit: 60,\n      // Limit frames per second for performance\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\" // Add more particles on click\n          },\n          onHover: {\n            enable: true,\n            mode: \"bubble\" // Particles \"bubble\" or grow on hover, like a sound visualizer\n          },\n          resize: true // Particles respond to window resize\n        },\n        modes: {\n          push: {\n            quantity: 4 // Number of particles to push on click\n          },\n          bubble: {\n            // Configuration for the bubble effect on hover\n            distance: 100,\n            // How far particles move away\n            size: 8,\n            // Particles grow larger\n            duration: 2,\n            opacity: 0.8,\n            color: {\n              value: theme.colors.primaryAccent\n            } // Change color on bubble\n          },\n          grab: {\n            // You can also click and grab particles\n            distance: 150,\n            links: {\n              opacity: 0.8\n            }\n          }\n        }\n      },\n      particles: {\n        color: {\n          // Use a range of vibrant colors from your theme for a dynamic feel\n          value: [theme.colors.primary,\n          // Deep Purple\n          theme.colors.secondary,\n          // Hot Pink\n          theme.colors.info,\n          // Dark Turquoise\n          theme.colors.primaryAccent // Blue Violet\n          ]\n        },\n        links: {\n          color: theme.colors.textSecondary,\n          // Use a neutral color for connecting lines\n          distance: 120,\n          // Slightly shorter distance for denser connections\n          enable: true,\n          // Enable lines between particles\n          opacity: 0.4,\n          // A bit more prominent lines\n          width: 1 // Line thickness\n        },\n        collisions: {\n          enable: true // Particles bounce off each other\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\" // Particles bounce off screen edges\n          },\n          random: true,\n          // Randomize movement direction slightly\n          speed: 0.7,\n          // Slightly faster, more energetic movement\n          straight: false,\n          // Not moving in a straight line\n          // Add a subtle wobble to simulate vibration/rhythm\n          wobble: {\n            enable: true,\n            distance: 5,\n            // How much they wobble\n            speed: 5 // How fast they wobble\n          },\n          // Add attract for subtle orbiting or drawing particles together\n          attract: {\n            enable: true,\n            rotateX: 600,\n            rotateY: 1200\n          }\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800 // Area to distribute particles\n          },\n          value: 100 // More particles for a denser, more energetic feel\n        },\n        opacity: {\n          value: {\n            min: 0.3,\n            max: 0.7\n          },\n          // Varying opacity for depth\n          // Animate opacity to create a subtle flicker/pulse effect\n          animation: {\n            enable: true,\n            speed: 1,\n            minimumValue: 0.3,\n            sync: false,\n            // Each particle animates independently\n            startValue: \"random\" // Start animation at random points\n          }\n        },\n        shape: {\n          type: [\"circle\", \"square\"] // Mix between circles and squares\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 4\n          },\n          // Varying sizes\n          // Animate size to create a subtle pulse effect\n          animation: {\n            enable: true,\n            speed: 5,\n            // Faster size change\n            minimumValue: 1,\n            sync: false,\n            // Each particle animates independently\n            startValue: \"random\"\n          }\n        }\n      },\n      detectRetina: true // Adjusts for high-DPI screens\n    };\n  }, [theme]); // Dependency array: recreate options if theme object changes\n\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\" // Unique ID for the particles canvas\n    ,\n    init: particlesInit // Function to initialize the particles engine\n    ,\n    options: particlesOptions // The configuration object for the particle system\n    ,\n    style: {\n      position: \"fixed\",\n      // Cover the entire viewport\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      zIndex: -2,\n      // Place behind most content, and behind globalStyle pseudo-elements (-1)\n      opacity: 0.8 // Overall opacity for the particle canvas itself\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"F3li4fEGpxqcKJg+xfnrzTW+tAM=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useCallback","useMemo","Particles","loadSlim","jsxDEV","_jsxDEV","ParticleBackground","theme","_s","particlesInit","engine","particlesOptions","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","bubble","distance","size","duration","opacity","colors","primaryAccent","grab","links","particles","primary","secondary","info","textSecondary","width","collisions","move","direction","outModes","default","random","speed","straight","wobble","attract","rotateX","rotateY","number","density","area","min","max","animation","minimumValue","sync","startValue","shape","type","detectRetina","id","init","options","style","position","top","left","height","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Madhu/OneDrive/Desktop/Musync/Musync/frontend/src/components/ParticleBackground.js"],"sourcesContent":["// src/components/ParticleBackground.jsx\r\nimport React, { useCallback, useMemo } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadSlim } from \"tsparticles-slim\"; // Using loadSlim for a smaller bundle\r\n\r\nconst ParticleBackground = ({ theme }) => {\r\n  // useCallback memoizes the init function to prevent unnecessary re-initializations\r\n  const particlesInit = useCallback(async (engine) => {\r\n    await loadSlim(engine);\r\n  }, []);\r\n\r\n  // useMemo memoizes the options object for performance, re-creating only if 'theme' changes\r\n  const particlesOptions = useMemo(() => {\r\n    return {\r\n      background: {\r\n        color: {\r\n          value: \"transparent\", // Particles will float over your existing background color/gradient\r\n        },\r\n      },\r\n      fpsLimit: 60, // Limit frames per second for performance\r\n      interactivity: {\r\n        events: {\r\n          onClick: {\r\n            enable: true,\r\n            mode: \"push\", // Add more particles on click\r\n          },\r\n          onHover: {\r\n            enable: true,\r\n            mode: \"bubble\", // Particles \"bubble\" or grow on hover, like a sound visualizer\r\n          },\r\n          resize: true, // Particles respond to window resize\r\n        },\r\n        modes: {\r\n          push: {\r\n            quantity: 4, // Number of particles to push on click\r\n          },\r\n          bubble: { // Configuration for the bubble effect on hover\r\n            distance: 100, // How far particles move away\r\n            size: 8, // Particles grow larger\r\n            duration: 2,\r\n            opacity: 0.8,\r\n            color: { value: theme.colors.primaryAccent } // Change color on bubble\r\n          },\r\n          grab: { // You can also click and grab particles\r\n            distance: 150,\r\n            links: {\r\n              opacity: 0.8,\r\n            }\r\n          }\r\n        },\r\n      },\r\n      particles: {\r\n        color: {\r\n          // Use a range of vibrant colors from your theme for a dynamic feel\r\n          value: [\r\n            theme.colors.primary,     // Deep Purple\r\n            theme.colors.secondary,   // Hot Pink\r\n            theme.colors.info,        // Dark Turquoise\r\n            theme.colors.primaryAccent // Blue Violet\r\n          ],\r\n        },\r\n        links: {\r\n          color: theme.colors.textSecondary, // Use a neutral color for connecting lines\r\n          distance: 120, // Slightly shorter distance for denser connections\r\n          enable: true, // Enable lines between particles\r\n          opacity: 0.4, // A bit more prominent lines\r\n          width: 1, // Line thickness\r\n        },\r\n        collisions: {\r\n          enable: true, // Particles bounce off each other\r\n        },\r\n        move: {\r\n          direction: \"none\",\r\n          enable: true,\r\n          outModes: {\r\n            default: \"bounce\", // Particles bounce off screen edges\r\n          },\r\n          random: true, // Randomize movement direction slightly\r\n          speed: 0.7, // Slightly faster, more energetic movement\r\n          straight: false, // Not moving in a straight line\r\n          // Add a subtle wobble to simulate vibration/rhythm\r\n          wobble: {\r\n            enable: true,\r\n            distance: 5, // How much they wobble\r\n            speed: 5,   // How fast they wobble\r\n          },\r\n          // Add attract for subtle orbiting or drawing particles together\r\n          attract: {\r\n            enable: true,\r\n            rotateX: 600,\r\n            rotateY: 1200,\r\n          },\r\n        },\r\n        number: {\r\n          density: {\r\n            enable: true,\r\n            area: 800, // Area to distribute particles\r\n          },\r\n          value: 100, // More particles for a denser, more energetic feel\r\n        },\r\n        opacity: {\r\n          value: { min: 0.3, max: 0.7 }, // Varying opacity for depth\r\n          // Animate opacity to create a subtle flicker/pulse effect\r\n          animation: {\r\n            enable: true,\r\n            speed: 1,\r\n            minimumValue: 0.3,\r\n            sync: false, // Each particle animates independently\r\n            startValue: \"random\", // Start animation at random points\r\n          }\r\n        },\r\n        shape: {\r\n          type: [\"circle\", \"square\"], // Mix between circles and squares\r\n        },\r\n        size: {\r\n          value: { min: 1, max: 4 }, // Varying sizes\r\n          // Animate size to create a subtle pulse effect\r\n          animation: {\r\n            enable: true,\r\n            speed: 5, // Faster size change\r\n            minimumValue: 1,\r\n            sync: false, // Each particle animates independently\r\n            startValue: \"random\",\r\n          }\r\n        },\r\n      },\r\n      detectRetina: true, // Adjusts for high-DPI screens\r\n    };\r\n  }, [theme]); // Dependency array: recreate options if theme object changes\r\n\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\" // Unique ID for the particles canvas\r\n      init={particlesInit} // Function to initialize the particles engine\r\n      options={particlesOptions} // The configuration object for the particle system\r\n      style={{\r\n        position: \"fixed\", // Cover the entire viewport\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: -2, // Place behind most content, and behind globalStyle pseudo-elements (-1)\r\n        opacity: 0.8, // Overall opacity for the particle canvas itself\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticleBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}