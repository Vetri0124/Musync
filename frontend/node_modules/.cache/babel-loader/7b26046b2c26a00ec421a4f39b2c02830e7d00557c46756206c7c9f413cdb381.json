{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhu\\\\OneDrive\\\\Desktop\\\\Musync\\\\Musync\\\\frontend\\\\src\\\\components\\\\Recorder\\\\Recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { AudioContext } from '../../context/AudioContext';\nimport Button from '../Button/Button';\nimport { RecorderContainer, Visualizer, ResultContainer } from './Recorder.styles'; // Ensure ResultContainer is imported\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recorder = () => {\n  _s();\n  const {\n    recording,\n    audioBlob,\n    result,\n    // This 'result' is the full backend response object (e.g., {success: true, data: {...}, message: \"...\"})\n    loading,\n    error,\n    startRecording,\n    stopRecording,\n    recognizeSong,\n    reset\n  } = useContext(AudioContext);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [visualizerData, setVisualizerData] = useState([]);\n  const visualizerIntervalRef = useRef(null);\n\n  // Effect to clean up mediaRecorder when component unmounts or mediaRecorder changes\n  useEffect(() => {\n    return () => {\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n        console.log('MediaRecorder stopped during cleanup.');\n      }\n      // Also clear the visualizer interval on component unmount\n      if (visualizerIntervalRef.current) {\n        clearInterval(visualizerIntervalRef.current);\n      }\n    };\n  }, [mediaRecorder]);\n  const handleStartRecording = async () => {\n    reset(); // Reset any previous state before starting new recording\n    setVisualizerData([]);\n    try {\n      const recorder = await startRecording(); // This function should handle mic access and return MediaRecorder\n      if (recorder) {\n        setMediaRecorder(recorder);\n\n        // Start visualization simulation and store the interval ID\n        visualizerIntervalRef.current = setInterval(() => {\n          // Generate random data for visualization (replace with actual audio data if available)\n          setVisualizerData(Array.from({\n            length: 20\n          }, () => Math.random() * 100));\n        }, 100);\n      } else {\n        // Handle cases where startRecording failed (e.g., mic permission denied)\n        console.error(\"Failed to get media recorder. Check microphone permissions.\");\n      }\n    } catch (err) {\n      console.error(\"Error starting recording:\", err);\n      // You might want to update the 'error' state from AudioContext here if not already handled\n    }\n  };\n  const handleStopRecording = () => {\n    // Stop recording via AudioContext and clear the visualizer interval\n    stopRecording(mediaRecorder); // This should trigger the onstop event in AudioContext\n    setVisualizerData([]);\n    if (visualizerIntervalRef.current) {\n      clearInterval(visualizerIntervalRef.current);\n      visualizerIntervalRef.current = null;\n    }\n  };\n\n  // Ensure recognizeSong is called when audioBlob is ready\n  useEffect(() => {\n    if (audioBlob && !loading && !result && !error) {\n      // Only call recognizeSong if we have an audioBlob, not currently loading,\n      // and haven't already got a result or an error from a previous attempt.\n      recognizeSong(audioBlob);\n    }\n  }, [audioBlob, loading, result, error, recognizeSong]);\n\n  // Extract song data if available\n  const songData = result && result.data ? result.data : null;\n  const noMatchFound = result && result.data === null; // Explicitly check for no match\n\n  return /*#__PURE__*/_jsxDEV(RecorderContainer, {\n    children: [!recording && !audioBlob && !result &&\n    /*#__PURE__*/\n    // Only show start button if no recording, no blob, no result\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button to start recording and recognize the song around you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStartRecording,\n        disabled: loading,\n        children: \"Recognize Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), recording && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recording in progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Visualizer, {\n        children: visualizerData.map((height, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `${height}%`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStopRecording,\n        style: {\n          backgroundColor: 'red'\n        },\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), audioBlob && !recording && loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing audio for recognition...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this), songData ?\n    /*#__PURE__*/\n    // If songData exists (i.e., a song was matched)\n    _jsxDEV(ResultContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Match Found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: songData.coverImage || '../',\n        alt: songData.title || 'Album Cover',\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = 'https://placehold.co/200x200/cccccc/333333?text=Image+Error';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: songData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", songData.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", songData.album || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", songData.genre || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year: \", songData.year || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", songData.duration ? `${Math.floor(songData.duration / 1000)} seconds` : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), songData.spotifyUrl && /*#__PURE__*/_jsxDEV(Button, {\n        as: \"a\",\n        href: songData.spotifyUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          margin: '0.5rem'\n        },\n        children: \"Listen on Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this), songData.appleMusicUrl && /*#__PURE__*/_jsxDEV(Button, {\n        as: \"a\",\n        href: songData.appleMusicUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          margin: '0.5rem'\n        },\n        children: \"Listen on Apple Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this), songData.youtubeUrl && /*#__PURE__*/_jsxDEV(Button, {\n        as: \"a\",\n        href: songData.youtubeUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          margin: '0.5rem'\n        },\n        children: \"Watch on YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: reset,\n        style: {\n          marginLeft: '1rem',\n          marginTop: '1rem'\n        },\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this) :\n    // If no songData, check if a \"no match\" response was received or if it's the initial state\n    !loading && !recording && result && noMatchFound && /*#__PURE__*/_jsxDEV(ResultContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Match Found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://placehold.co/200x200/cccccc/333333?text=No+Cover\",\n        alt: \"No Album Cover Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Artist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Album:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Duration: N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: reset,\n        style: {\n          marginLeft: '1rem',\n          marginTop: '1rem'\n        },\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }, this), !recording && !loading && (audioBlob || result || error) && !songData && !noMatchFound && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      style: {\n        marginLeft: '1rem',\n        marginTop: '1rem'\n      },\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Recorder, \"lkun+4sBPs2L0HAqXM331pXHHqM=\");\n_c = Recorder;\nexport default Recorder;\nvar _c;\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","AudioContext","Button","RecorderContainer","Visualizer","ResultContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Recorder","_s","recording","audioBlob","result","loading","error","startRecording","stopRecording","recognizeSong","reset","mediaRecorder","setMediaRecorder","visualizerData","setVisualizerData","visualizerIntervalRef","state","stop","console","log","current","clearInterval","handleStartRecording","recorder","setInterval","Array","from","length","Math","random","err","handleStopRecording","songData","data","noMatchFound","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","height","index","style","backgroundColor","color","marginTop","src","coverImage","alt","title","onError","e","target","onerror","artist","album","genre","year","duration","floor","spotifyUrl","as","href","rel","margin","appleMusicUrl","youtubeUrl","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Madhu/OneDrive/Desktop/Musync/Musync/frontend/src/components/Recorder/Recorder.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { AudioContext } from '../../context/AudioContext';\r\nimport Button from '../Button/Button';\r\nimport { RecorderContainer, Visualizer, ResultContainer } from './Recorder.styles'; // Ensure ResultContainer is imported\r\n\r\nconst Recorder = () => {\r\n    const {\r\n        recording,\r\n        audioBlob,\r\n        result, // This 'result' is the full backend response object (e.g., {success: true, data: {...}, message: \"...\"})\r\n        loading,\r\n        error,\r\n        startRecording,\r\n        stopRecording,\r\n        recognizeSong,\r\n        reset\r\n    } = useContext(AudioContext);\r\n\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [visualizerData, setVisualizerData] = useState([]);\r\n    const visualizerIntervalRef = useRef(null);\r\n\r\n    // Effect to clean up mediaRecorder when component unmounts or mediaRecorder changes\r\n    useEffect(() => {\r\n        return () => {\r\n            if (mediaRecorder && mediaRecorder.state !== 'inactive') {\r\n                mediaRecorder.stop();\r\n                console.log('MediaRecorder stopped during cleanup.');\r\n            }\r\n            // Also clear the visualizer interval on component unmount\r\n            if (visualizerIntervalRef.current) {\r\n                clearInterval(visualizerIntervalRef.current);\r\n            }\r\n        };\r\n    }, [mediaRecorder]);\r\n\r\n    const handleStartRecording = async () => {\r\n        reset(); // Reset any previous state before starting new recording\r\n        setVisualizerData([]);\r\n\r\n        try {\r\n            const recorder = await startRecording(); // This function should handle mic access and return MediaRecorder\r\n            if (recorder) {\r\n                setMediaRecorder(recorder);\r\n\r\n                // Start visualization simulation and store the interval ID\r\n                visualizerIntervalRef.current = setInterval(() => {\r\n                    // Generate random data for visualization (replace with actual audio data if available)\r\n                    setVisualizerData(Array.from({ length: 20 }, () => Math.random() * 100));\r\n                }, 100);\r\n            } else {\r\n                // Handle cases where startRecording failed (e.g., mic permission denied)\r\n                console.error(\"Failed to get media recorder. Check microphone permissions.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error starting recording:\", err);\r\n            // You might want to update the 'error' state from AudioContext here if not already handled\r\n        }\r\n    };\r\n\r\n    const handleStopRecording = () => {\r\n        // Stop recording via AudioContext and clear the visualizer interval\r\n        stopRecording(mediaRecorder); // This should trigger the onstop event in AudioContext\r\n        setVisualizerData([]);\r\n        if (visualizerIntervalRef.current) {\r\n            clearInterval(visualizerIntervalRef.current);\r\n            visualizerIntervalRef.current = null;\r\n        }\r\n    };\r\n\r\n    // Ensure recognizeSong is called when audioBlob is ready\r\n    useEffect(() => {\r\n        if (audioBlob && !loading && !result && !error) {\r\n            // Only call recognizeSong if we have an audioBlob, not currently loading,\r\n            // and haven't already got a result or an error from a previous attempt.\r\n            recognizeSong(audioBlob);\r\n        }\r\n    }, [audioBlob, loading, result, error, recognizeSong]);\r\n\r\n\r\n    // Extract song data if available\r\n    const songData = result && result.data ? result.data : null;\r\n    const noMatchFound = result && result.data === null; // Explicitly check for no match\r\n\r\n    return (\r\n        <RecorderContainer>\r\n            {/* State 1: Ready to start recording */}\r\n            {!recording && !audioBlob && !result && ( // Only show start button if no recording, no blob, no result\r\n                <>\r\n                    <p>Click the button to start recording and recognize the song around you!</p>\r\n                    <Button onClick={handleStartRecording} disabled={loading}>\r\n                        Recognize Song\r\n                    </Button>\r\n                </>\r\n            )}\r\n\r\n            {/* State 2: Currently recording */}\r\n            {recording && (\r\n                <>\r\n                    <p>Recording in progress...</p>\r\n                    <Visualizer>\r\n                        {visualizerData.map((height, index) => (\r\n                            <div key={index} style={{ height: `${height}%` }} />\r\n                        ))}\r\n                    </Visualizer>\r\n                    <Button onClick={handleStopRecording} style={{ backgroundColor: 'red' }}>\r\n                        Stop Recording\r\n                    </Button>\r\n                </>\r\n            )}\r\n\r\n            {/* State 3: Audio recorded, processing for recognition */}\r\n            {audioBlob && !recording && loading && (\r\n                <p>Processing audio for recognition...</p>\r\n            )}\r\n\r\n            {/* Display error messages */}\r\n            {error && <p style={{ color: 'red', marginTop: '1rem' }}>{error}</p>}\r\n\r\n            {/* Display recognition result or \"No Match Found\" */}\r\n            {songData ? ( // If songData exists (i.e., a song was matched)\r\n                <ResultContainer>\r\n                    <h3>Match Found!</h3>\r\n                    {/* Use songData.coverImage, provide fallback */}\r\n                    <img\r\n                        src={songData.coverImage || '../'}\r\n                        alt={songData.title || 'Album Cover'}\r\n                        onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/200x200/cccccc/333333?text=Image+Error'; }}\r\n                    />\r\n                    <h4>{songData.title}</h4>\r\n                    <p>Artist: {songData.artist}</p>\r\n                    <p>Album: {songData.album || 'N/A'}</p> {/* Use albumName from backend */}\r\n                    <p>Genre: {songData.genre || 'N/A'}</p>\r\n                    <p>Year: {songData.year || 'N/A'}</p>\r\n                    <p>Duration: {songData.duration ? `${Math.floor(songData.duration / 1000)} seconds` : 'N/A'}</p>\r\n\r\n                    {/* Conditional rendering for streaming links based on their existence */}\r\n                    {songData.spotifyUrl && (\r\n                        <Button as=\"a\" href={songData.spotifyUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={{ margin: '0.5rem' }}>\r\n                            Listen on Spotify\r\n                        </Button>\r\n                    )}\r\n                    {songData.appleMusicUrl && (\r\n                        <Button as=\"a\" href={songData.appleMusicUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={{ margin: '0.5rem' }}>\r\n                            Listen on Apple Music\r\n                        </Button>\r\n                    )}\r\n                    {songData.youtubeUrl && (\r\n                        <Button as=\"a\" href={songData.youtubeUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={{ margin: '0.5rem' }}>\r\n                            Watch on YouTube\r\n                        </Button>\r\n                    )}\r\n\r\n                    {/* Show Try Again button after a result is displayed */}\r\n                    <Button onClick={reset} style={{ marginLeft: '1rem', marginTop: '1rem' }}>\r\n                        Try Again\r\n                    </Button>\r\n                </ResultContainer>\r\n            ) : (\r\n                // If no songData, check if a \"no match\" response was received or if it's the initial state\r\n                !loading && !recording && result && noMatchFound && (\r\n                    <ResultContainer>\r\n                        <h3>No Match Found!</h3>\r\n                        <img\r\n                            src=\"https://placehold.co/200x200/cccccc/333333?text=No+Cover\"\r\n                            alt=\"No Album Cover Available\"\r\n                        />\r\n                         <p>Artist:</p>\r\n                         <p>Album:</p>\r\n                         <p>Genre:</p>\r\n                         <p>Year:</p>\r\n                         <p>Duration: N/A</p>\r\n                        <Button onClick={reset} style={{ marginLeft: '1rem', marginTop: '1rem' }}>\r\n                            Try Again\r\n                        </Button>\r\n                    </ResultContainer>\r\n                )\r\n            )}\r\n\r\n            {/* This condition ensures \"Try Again\" is shown after a recognition attempt, regardless of match */}\r\n            {!recording && !loading && (audioBlob || result || error) && !songData && !noMatchFound && (\r\n                 <Button onClick={reset} style={{ marginLeft: '1rem', marginTop: '1rem' }}>\r\n                    Try Again\r\n                </Button>\r\n            )}\r\n\r\n        </RecorderContainer>\r\n    );\r\n};\r\n\r\nexport default Recorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}