{"ast":null,"code":"import { createGlobalStyle } from 'styled-components';\n\n// Define your theme object based on the CSS variables you provided\nexport const theme = {\n  colors: {\n    background: '#ffffff',\n    text: '#333333',\n    primary: '#95b9ee',\n    // Your primary color\n    secondary: '#f0d39e',\n    // Your secondary color\n    accent: '#b05bec',\n    // Your accent color\n    // If you had 'light', 'border', 'textSecondary' in other styled-components,\n    // you should add them here as well based on your previous theme structure.\n    // Example from previous styled-components files:\n    light: '#F8F8F8',\n    // Assuming a light color was used in Features\n    border: '#DDDDDD',\n    // Assuming a border color was used in SearchInput\n    textSecondary: '#666666' // Assuming a secondary text color was used\n  },\n  fonts: {\n    main: \"Tahoma, Geneva, Verdana, sans-serif\",\n    heading: \"'Circular', 'Helvetica Neue', Helvetica, Arial, sans-serif\"\n  },\n  breakpoints: {\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px'\n  }\n  // Add other theme properties if you had them (e.g., spacing, shadows)\n};\nconst GlobalStyle = createGlobalStyle`\n  /* Global Styles (converted from your CSS) */\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n\n  body {\n    font-family: ${({\n  theme\n}) => theme.fonts.main}; /* Uses theme font */\n    line-height: 1.6;\n    background-color: ${({\n  theme\n}) => theme.colors.background}; /* Uses theme color */\n    color: ${({\n  theme\n}) => theme.colors.text}; /* Uses theme color */\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: ${({\n  theme\n}) => theme.fonts.heading}; /* Uses theme font */\n    margin-bottom: 1rem;\n    line-height: 1.2;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n    transition: color 0.3s ease;\n\n    &:hover { /* Nested pseudo-selector for styled-components */\n      color: ${({\n  theme\n}) => theme.colors.primary}; /* Uses theme color */\n    }\n  }\n\n  button {\n    font-family: inherit;\n    cursor: pointer;\n    border: none;\n    transition: all 0.3s ease;\n  }\n\n  input, textarea, button {\n    &:focus { /* Nested pseudo-selector for styled-components */\n      outline: 2px solid ${({\n  theme\n}) => theme.colors.secondary}; /* Uses theme color */\n      outline-offset: 2px;\n    }\n  }\n\n  /* Add smooth scrolling for anchor links */\n  @media (prefers-reduced-motion: no-preference) {\n    html {\n      scroll-behavior: smooth;\n    }\n  }\n`;\nexport default GlobalStyle;","map":{"version":3,"names":["createGlobalStyle","theme","colors","background","text","primary","secondary","accent","light","border","textSecondary","fonts","main","heading","breakpoints","sm","md","lg","xl","GlobalStyle"],"sources":["C:/Users/user/Desktop/Musync/frontend/src/styles/globalStyles.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\n// Define your theme object based on the CSS variables you provided\r\nexport const theme = {\r\n  colors: {\r\n    background: '#ffffff',\r\n    text: '#333333',\r\n    primary: '#95b9ee', // Your primary color\r\n    secondary: '#f0d39e', // Your secondary color\r\n    accent: '#b05bec', // Your accent color\r\n    // If you had 'light', 'border', 'textSecondary' in other styled-components,\r\n    // you should add them here as well based on your previous theme structure.\r\n    // Example from previous styled-components files:\r\n    light: '#F8F8F8', // Assuming a light color was used in Features\r\n    border: '#DDDDDD', // Assuming a border color was used in SearchInput\r\n    textSecondary: '#666666', // Assuming a secondary text color was used\r\n  },\r\n  fonts: {\r\n    main: \"Tahoma, Geneva, Verdana, sans-serif\",\r\n    heading: \"'Circular', 'Helvetica Neue', Helvetica, Arial, sans-serif\",\r\n  },\r\n  breakpoints: {\r\n    sm: '576px',\r\n    md: '768px',\r\n    lg: '992px',\r\n    xl: '1200px',\r\n  },\r\n  // Add other theme properties if you had them (e.g., spacing, shadows)\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  /* Global Styles (converted from your CSS) */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  body {\r\n    font-family: ${({ theme }) => theme.fonts.main}; /* Uses theme font */\r\n    line-height: 1.6;\r\n    background-color: ${({ theme }) => theme.colors.background}; /* Uses theme color */\r\n    color: ${({ theme }) => theme.colors.text}; /* Uses theme color */\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-family: ${({ theme }) => theme.fonts.heading}; /* Uses theme font */\r\n    margin-bottom: 1rem;\r\n    line-height: 1.2;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover { /* Nested pseudo-selector for styled-components */\r\n      color: ${({ theme }) => theme.colors.primary}; /* Uses theme color */\r\n    }\r\n  }\r\n\r\n  button {\r\n    font-family: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  input, textarea, button {\r\n    &:focus { /* Nested pseudo-selector for styled-components */\r\n      outline: 2px solid ${({ theme }) => theme.colors.secondary}; /* Uses theme color */\r\n      outline-offset: 2px;\r\n    }\r\n  }\r\n\r\n  /* Add smooth scrolling for anchor links */\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    html {\r\n      scroll-behavior: smooth;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,mBAAmB;;AAErD;AACA,OAAO,MAAMC,KAAK,GAAG;EACnBC,MAAM,EAAE;IACNC,UAAU,EAAE,SAAS;IACrBC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE,SAAS;IAAE;IACpBC,SAAS,EAAE,SAAS;IAAE;IACtBC,MAAM,EAAE,SAAS;IAAE;IACnB;IACA;IACA;IACAC,KAAK,EAAE,SAAS;IAAE;IAClBC,MAAM,EAAE,SAAS;IAAE;IACnBC,aAAa,EAAE,SAAS,CAAE;EAC5B,CAAC;EACDC,KAAK,EAAE;IACLC,IAAI,EAAE,qCAAqC;IAC3CC,OAAO,EAAE;EACX,CAAC;EACDC,WAAW,EAAE;IACXC,EAAE,EAAE,OAAO;IACXC,EAAE,EAAE,OAAO;IACXC,EAAE,EAAE,OAAO;IACXC,EAAE,EAAE;EACN;EACA;AACF,CAAC;AAED,MAAMC,WAAW,GAAGnB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACU,KAAK,CAACC,IAAI;AAClD;AACA,wBAAwB,CAAC;EAAEX;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,UAAU;AAC9D,aAAa,CAAC;EAAEF;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACE,IAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,CAAC;EAAEH;AAAM,CAAC,KAAKA,KAAK,CAACU,KAAK,CAACE,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,CAAC;EAAEZ;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACG,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,CAAC;EAAEJ;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACI,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAea,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}