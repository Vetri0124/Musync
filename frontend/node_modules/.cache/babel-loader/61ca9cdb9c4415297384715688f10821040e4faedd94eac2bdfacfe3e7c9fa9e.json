{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhu\\\\OneDrive\\\\Desktop\\\\Musync\\\\Musync\\\\frontend\\\\src\\\\components\\\\ParticleBackground.js\",\n  _s = $RefreshSig$();\n// src/components/ParticleBackground.jsx\nimport React, { useCallback, useMemo } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\"; // Using loadSlim for a smaller bundle size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = ({\n  theme\n}) => {\n  _s();\n  // useCallback is used to memoize the init function.\n  // This ensures the init function reference is stable across re-renders,\n  // which is good for performance and avoiding unnecessary re-initializations.\n  const particlesInit = useCallback(async engine => {\n    // You can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // This loads the tsparticles \"slim\" package bundle, it's the smallest bundle and the default\n    // of tsParticles but you can use other ones like \"tsparticles-full\" or \"tsparticles-engine\"\n    await loadSlim(engine);\n  }, []); // Empty dependency array ensures this function is created only once\n\n  // useMemo is used to memoize the options object.\n  // This prevents the options object from being re-created on every render,\n  // which can be expensive and cause Particles to re-render unnecessarily.\n  const particlesOptions = useMemo(() => {\n    return {\n      background: {\n        color: {\n          value: \"transparent\" // Particles overlay on your body background defined in GlobalStyle\n        }\n      },\n      fpsLimit: 60,\n      // Limit frames per second for smooth animation and performance\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\" // Push new particles on click\n          },\n          onHover: {\n            enable: true,\n            mode: \"bubble\" // Particles \"bubble\" (grow/change) on hover, enhancing depth\n          },\n          resize: true // Particles respond to window resize events\n        },\n        modes: {\n          push: {\n            quantity: 4 // Number of particles to push on click\n          },\n          bubble: {\n            distance: 120,\n            // How far particles react for bubble effect\n            size: 20,\n            // Particles grow noticeably larger when bubbled\n            duration: 0.6,\n            // Quick bubble reaction time\n            opacity: 0.9,\n            // Almost full opacity when bubbled\n            color: {\n              value: theme.colors.primaryAccent\n            } // Change color to accent on bubble\n          },\n          grab: {\n            // Optional mode: allows dragging particles on click\n            distance: 180,\n            links: {\n              opacity: 0.8\n            }\n          }\n        }\n      },\n      particles: {\n        color: {\n          // These colors can tint your image particles or be used for non-image shapes.\n          // If your images are already colored and you want to preserve their original colors,\n          // you can set this to { value: \"#FFFFFF\" } (white) or remove if your tsparticles version supports it.\n          value: [theme.colors.primary,\n          // Deep Purple\n          theme.colors.secondary,\n          // Hot Pink\n          theme.colors.info,\n          // Dark Turquoise\n          theme.colors.primaryAccent // Blue Violet\n          ]\n        },\n        links: {\n          color: theme.colors.textSecondary,\n          // Connecting lines use a neutral color from theme\n          distance: 150,\n          // Standard distance for connections\n          enable: true,\n          // Enable lines between particles\n          opacity: 0.3,\n          // Subtle lines\n          width: 1 // Line thickness\n        },\n        collisions: {\n          enable: true // Particles bounce off each other, adds to \"live\" feel\n        },\n        move: {\n          direction: \"none\",\n          // Combined with 'random', gives a volumetric feel\n          enable: true,\n          outModes: {\n            default: \"bounce\" // Particles bounce off screen edges for smooth animation\n          },\n          random: true,\n          // Random movement direction, crucial for 3D illusion\n          speed: {\n            min: 0.3,\n            max: 1.5\n          },\n          // Wider speed range to simulate varying depth (faster are closer)\n          straight: false,\n          // Not moving in a straight line\n          // Add a subtle wobble to simulate vibration/rhythm and organic movement\n          wobble: {\n            enable: true,\n            distance: 8,\n            // How much they wobble\n            speed: 6 // How fast they wobble\n          },\n          // Add attract for subtle orbiting or drawing particles together in a \"dance\"\n          attract: {\n            enable: true,\n            rotateX: 1000,\n            // Stronger attract on X axis\n            rotateY: 1000 // Stronger attract on Y axis\n          }\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 1000 // Increase area to spread particles more, filling perceived 3D space\n          },\n          value: 120 // More particles for a denser, more immersive field\n        },\n        opacity: {\n          value: {\n            min: 0.1,\n            max: 0.7\n          },\n          // Wider opacity range to simulate fading into distance (more distant are fainter)\n          animation: {\n            enable: true,\n            speed: 0.7,\n            // Slower, more subtle opacity changes\n            minimumValue: 0.1,\n            // Particles can fade out significantly\n            sync: false,\n            // Each particle animates independently\n            startValue: \"random\" // Start animation at random points\n          }\n        },\n        shape: {\n          type: \"image\",\n          // <-- IMPORTANT: Set shape type to 'image' for musical symbols\n          options: {\n            image: [\n            // <-- Add your musical note image paths here\n            // Ensure these paths are correct relative to your public folder!\n            // For better 3D illusion, ensure images have transparent backgrounds (SVG/PNG)\n            {\n              src: \"/images/note-eighth.svg\",\n              // Example: An eighth note icon\n              width: 20,\n              // Original icon width for rendering\n              height: 20 // Original icon height\n            }, {\n              src: \"/images/treble-clef.svg\",\n              // Example: A treble clef icon\n              width: 25,\n              height: 25\n            }, {\n              src: \"/images/note-quarter.svg\",\n              // Example: A quarter note icon\n              width: 22,\n              height: 22\n            }, {\n              src: \"/images/music-bar.svg\",\n              // Example: A simple music bar/measure icon\n              width: 18,\n              height: 18\n            }\n            // Add more image objects here if you have more symbols\n            ]\n          }\n        },\n        size: {\n          value: {\n            min: 8,\n            max: 35\n          },\n          // Wider size range for more prominent depth illusion (larger are closer)\n          animation: {\n            enable: true,\n            speed: 10,\n            // Faster size changes for a more noticeable pulse/depth effect\n            minimumValue: 5,\n            // Particles can get very small to simulate moving far away\n            sync: false,\n            // Each particle animates independently\n            startValue: \"random\"\n          }\n        },\n        // Optional: Adding a slight rotation to particles for more dynamic visuals\n        rotate: {\n          value: 0,\n          animation: {\n            enable: true,\n            speed: 1,\n            // Slower continuous rotation\n            sync: false\n          }\n        }\n      },\n      detectRetina: true // Adjusts for high-DPI screens\n    };\n  }, [theme]); // Dependency array: Re-create options if the 'theme' object changes\n\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\" // Unique ID for the particles canvas element\n    ,\n    init: particlesInit // Function to initialize the particles engine\n    ,\n    options: particlesOptions // The configuration object for the particle system\n    ,\n    style: {\n      position: \"fixed\",\n      // Cover the entire viewport\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      pointerEvents: \"none\",\n      // Crucial: Allows clicks to pass through to elements beneath the particles\n      zIndex: -2,\n      // Place behind most content, and behind globalStyle pseudo-elements (-1)\n      opacity: 0.9 // Overall opacity for the particle canvas itself (slightly more visible)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"F3li4fEGpxqcKJg+xfnrzTW+tAM=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useCallback","useMemo","Particles","loadSlim","jsxDEV","_jsxDEV","ParticleBackground","theme","_s","particlesInit","engine","particlesOptions","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","bubble","distance","size","duration","opacity","colors","primaryAccent","grab","links","particles","primary","secondary","info","textSecondary","width","collisions","move","direction","outModes","default","random","speed","min","max","straight","wobble","attract","rotateX","rotateY","number","density","area","animation","minimumValue","sync","startValue","shape","type","options","image","src","height","rotate","detectRetina","id","init","style","position","top","left","pointerEvents","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Madhu/OneDrive/Desktop/Musync/Musync/frontend/src/components/ParticleBackground.js"],"sourcesContent":["// src/components/ParticleBackground.jsx\r\nimport React, { useCallback, useMemo } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadSlim } from \"tsparticles-slim\"; // Using loadSlim for a smaller bundle size\r\n\r\nconst ParticleBackground = ({ theme }) => {\r\n  // useCallback is used to memoize the init function.\r\n  // This ensures the init function reference is stable across re-renders,\r\n  // which is good for performance and avoiding unnecessary re-initializations.\r\n  const particlesInit = useCallback(async (engine) => {\r\n    // You can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n    // This loads the tsparticles \"slim\" package bundle, it's the smallest bundle and the default\r\n    // of tsParticles but you can use other ones like \"tsparticles-full\" or \"tsparticles-engine\"\r\n    await loadSlim(engine);\r\n  }, []); // Empty dependency array ensures this function is created only once\r\n\r\n  // useMemo is used to memoize the options object.\r\n  // This prevents the options object from being re-created on every render,\r\n  // which can be expensive and cause Particles to re-render unnecessarily.\r\n  const particlesOptions = useMemo(() => {\r\n    return {\r\n      background: {\r\n        color: {\r\n          value: \"transparent\", // Particles overlay on your body background defined in GlobalStyle\r\n        },\r\n      },\r\n      fpsLimit: 60, // Limit frames per second for smooth animation and performance\r\n      interactivity: {\r\n        events: {\r\n          onClick: {\r\n            enable: true,\r\n            mode: \"push\", // Push new particles on click\r\n          },\r\n          onHover: {\r\n            enable: true,\r\n            mode: \"bubble\", // Particles \"bubble\" (grow/change) on hover, enhancing depth\r\n          },\r\n          resize: true, // Particles respond to window resize events\r\n        },\r\n        modes: {\r\n          push: {\r\n            quantity: 4, // Number of particles to push on click\r\n          },\r\n          bubble: {\r\n            distance: 120, // How far particles react for bubble effect\r\n            size: 20,      // Particles grow noticeably larger when bubbled\r\n            duration: 0.6, // Quick bubble reaction time\r\n            opacity: 0.9,  // Almost full opacity when bubbled\r\n            color: { value: theme.colors.primaryAccent } // Change color to accent on bubble\r\n          },\r\n          grab: { // Optional mode: allows dragging particles on click\r\n            distance: 180,\r\n            links: {\r\n              opacity: 0.8,\r\n            },\r\n          }\r\n        },\r\n      },\r\n      particles: {\r\n        color: {\r\n          // These colors can tint your image particles or be used for non-image shapes.\r\n          // If your images are already colored and you want to preserve their original colors,\r\n          // you can set this to { value: \"#FFFFFF\" } (white) or remove if your tsparticles version supports it.\r\n          value: [\r\n            theme.colors.primary,     // Deep Purple\r\n            theme.colors.secondary,   // Hot Pink\r\n            theme.colors.info,        // Dark Turquoise\r\n            theme.colors.primaryAccent // Blue Violet\r\n          ],\r\n        },\r\n        links: {\r\n          color: theme.colors.textSecondary, // Connecting lines use a neutral color from theme\r\n          distance: 150, // Standard distance for connections\r\n          enable: true, // Enable lines between particles\r\n          opacity: 0.3, // Subtle lines\r\n          width: 1, // Line thickness\r\n        },\r\n        collisions: {\r\n          enable: true, // Particles bounce off each other, adds to \"live\" feel\r\n        },\r\n        move: {\r\n          direction: \"none\", // Combined with 'random', gives a volumetric feel\r\n          enable: true,\r\n          outModes: {\r\n            default: \"bounce\", // Particles bounce off screen edges for smooth animation\r\n          },\r\n          random: true, // Random movement direction, crucial for 3D illusion\r\n          speed: { min: 0.3, max: 1.5 }, // Wider speed range to simulate varying depth (faster are closer)\r\n          straight: false, // Not moving in a straight line\r\n          // Add a subtle wobble to simulate vibration/rhythm and organic movement\r\n          wobble: {\r\n            enable: true,\r\n            distance: 8, // How much they wobble\r\n            speed: 6,   // How fast they wobble\r\n          },\r\n          // Add attract for subtle orbiting or drawing particles together in a \"dance\"\r\n          attract: {\r\n            enable: true,\r\n            rotateX: 1000, // Stronger attract on X axis\r\n            rotateY: 1000, // Stronger attract on Y axis\r\n          },\r\n        },\r\n        number: {\r\n          density: {\r\n            enable: true,\r\n            area: 1000, // Increase area to spread particles more, filling perceived 3D space\r\n          },\r\n          value: 120, // More particles for a denser, more immersive field\r\n        },\r\n        opacity: {\r\n          value: { min: 0.1, max: 0.7 }, // Wider opacity range to simulate fading into distance (more distant are fainter)\r\n          animation: {\r\n            enable: true,\r\n            speed: 0.7, // Slower, more subtle opacity changes\r\n            minimumValue: 0.1, // Particles can fade out significantly\r\n            sync: false, // Each particle animates independently\r\n            startValue: \"random\", // Start animation at random points\r\n          }\r\n        },\r\n        shape: {\r\n          type: \"image\", // <-- IMPORTANT: Set shape type to 'image' for musical symbols\r\n          options: {\r\n            image: [\r\n              // <-- Add your musical note image paths here\r\n              // Ensure these paths are correct relative to your public folder!\r\n              // For better 3D illusion, ensure images have transparent backgrounds (SVG/PNG)\r\n              {\r\n                src: \"/images/note-eighth.svg\", // Example: An eighth note icon\r\n                width: 20, // Original icon width for rendering\r\n                height: 20, // Original icon height\r\n              },\r\n              {\r\n                src: \"/images/treble-clef.svg\", // Example: A treble clef icon\r\n                width: 25,\r\n                height: 25,\r\n              },\r\n              {\r\n                src: \"/images/note-quarter.svg\", // Example: A quarter note icon\r\n                width: 22,\r\n                height: 22,\r\n              },\r\n              {\r\n                src: \"/images/music-bar.svg\", // Example: A simple music bar/measure icon\r\n                width: 18,\r\n                height: 18,\r\n              },\r\n              // Add more image objects here if you have more symbols\r\n            ],\r\n          },\r\n        },\r\n        size: {\r\n          value: { min: 8, max: 35 }, // Wider size range for more prominent depth illusion (larger are closer)\r\n          animation: {\r\n            enable: true,\r\n            speed: 10, // Faster size changes for a more noticeable pulse/depth effect\r\n            minimumValue: 5, // Particles can get very small to simulate moving far away\r\n            sync: false, // Each particle animates independently\r\n            startValue: \"random\",\r\n          }\r\n        },\r\n        // Optional: Adding a slight rotation to particles for more dynamic visuals\r\n        rotate: {\r\n            value: 0,\r\n            animation: {\r\n                enable: true,\r\n                speed: 1, // Slower continuous rotation\r\n                sync: false,\r\n            }\r\n        }\r\n      },\r\n      detectRetina: true, // Adjusts for high-DPI screens\r\n    };\r\n  }, [theme]); // Dependency array: Re-create options if the 'theme' object changes\r\n\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\" // Unique ID for the particles canvas element\r\n      init={particlesInit} // Function to initialize the particles engine\r\n      options={particlesOptions} // The configuration object for the particle system\r\n      style={{\r\n        position: \"fixed\", // Cover the entire viewport\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        pointerEvents: \"none\", // Crucial: Allows clicks to pass through to elements beneath the particles\r\n        zIndex: -2, // Place behind most content, and behind globalStyle pseudo-elements (-1)\r\n        opacity: 0.9, // Overall opacity for the particle canvas itself (slightly more visible)\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticleBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}