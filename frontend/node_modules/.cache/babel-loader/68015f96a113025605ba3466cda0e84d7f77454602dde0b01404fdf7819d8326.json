{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Musync\\\\frontend\\\\src\\\\context\\\\AudioContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioContext = /*#__PURE__*/createContext();\nconst AudioProvider = ({\n  children\n}) => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorder.ondataavailable = e => {\n        audioChunks.push(e.data);\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        setAudioBlob(audioBlob);\n      };\n      mediaRecorder.start();\n      setRecording(true);\n      return mediaRecorder;\n    } catch (err) {\n      setError('Microphone access denied');\n      console.error(err);\n    }\n  };\n  const stopRecording = mediaRecorder => {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n      setRecording(false);\n    }\n  };\n  const recognizeSong = async () => {\n    if (!audioBlob) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      formData.append('audio', audioBlob, 'recording.wav');\n      const res = await axios.post('/api/recognize', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setResult(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Recognition failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      recording,\n      audioBlob,\n      result,\n      loading,\n      error,\n      startRecording,\n      stopRecording,\n      recognizeSong,\n      reset: () => {\n        setAudioBlob(null);\n        setResult(null);\n        setError(null);\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProvider, \"+ipqIAooPE+qvUuM/uKFI88n8r4=\");\n_c = AudioProvider;\nexport { AudioContext, AudioProvider };\nvar _c;\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","AudioContext","AudioProvider","children","_s","recording","setRecording","audioBlob","setAudioBlob","result","setResult","loading","setLoading","error","setError","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","ondataavailable","e","push","data","onstop","Blob","type","start","err","console","stopRecording","state","stop","recognizeSong","formData","FormData","append","res","post","headers","Authorization","localStorage","getItem","_err$response","_err$response$data","response","message","Provider","value","reset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Musync/frontend/src/context/AudioContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AudioContext = createContext();\r\n\r\nconst AudioProvider = ({ children }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      const audioChunks = [];\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        audioChunks.push(e.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        setAudioBlob(audioBlob);\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setRecording(true);\r\n\r\n      return mediaRecorder;\r\n    } catch (err) {\r\n      setError('Microphone access denied');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = (mediaRecorder) => {\r\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\r\n      mediaRecorder.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const recognizeSong = async () => {\r\n    if (!audioBlob) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('audio', audioBlob, 'recording.wav');\r\n\r\n      const res = await axios.post('/api/recognize', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      setResult(res.data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Recognition failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider value={{\r\n      recording,\r\n      audioBlob,\r\n      result,\r\n      loading,\r\n      error,\r\n      startRecording,\r\n      stopRecording,\r\n      recognizeSong,\r\n      reset: () => {\r\n        setAudioBlob(null);\r\n        setResult(null);\r\n        setError(null);\r\n      }\r\n    }}>\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AudioContext, AudioProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}