{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Musync\\\\frontend\\\\src\\\\pages\\\\Search\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\nimport axios from 'axios';\nimport { SearchContainer, SearchInput, ResultsGrid, SongCard } from './SearchPage.styles';\n// import { Button } from '../../components/Button/Button'; // REMOVED: 'Button' is defined but never used\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Use useCallback to memoize searchSongs, addressing the useEffect dependency warning\n  const searchSongs = useCallback(async () => {\n    if (!query.trim()) {\n      setResults([]); // Clear results if query is empty\n      return;\n    }\n    setLoading(true);\n    try {\n      // --- CRITICAL FIX: Changed API endpoint to /api/songs/search ---\n      const res = await axios.get(`/api/songs/search?search=${query}`);\n      // Assuming res.data will be the array of songs directly.\n      // If your backend searchSongs controller returns an object like { success: true, data: [...] },\n      // then you might need to change setResults(res.data) to setResults(res.data.data).\n      setResults(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error searching songs:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n      setResults([]); // Clear results on error\n    } finally {\n      setLoading(false);\n    }\n  }, [query]); // query is now a dependency for useCallback\n\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      // Only call searchSongs if there's a query\n      if (query) {\n        searchSongs();\n      } else {\n        setResults([]); // Clear results if query becomes empty while debouncing\n      }\n    }, 500);\n    return () => clearTimeout(delayDebounce);\n  }, [query, searchSongs]); // Added searchSongs to dependency array\n\n  return /*#__PURE__*/_jsxDEV(SearchContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n      type: \"text\",\n      placeholder: \"Search by song title, artist or album...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ResultsGrid, {\n      children: results && Array.isArray(results) && results.map(song => /*#__PURE__*/_jsxDEV(SongCard, {\n        to: `/song/${song._id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.albumCover,\n          alt: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, song._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !loading && results && results.length === 0 && query && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No results found for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), !loading && !query && results && results.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Start typing to search for songs.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"nhKO5fSmDw0x/6j5Y9flHPeuBWk=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","SearchContainer","SearchInput","ResultsGrid","SongCard","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","results","setResults","loading","setLoading","searchSongs","trim","res","get","data","err","_err$response","_err$response$data","console","error","response","message","delayDebounce","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","Array","isArray","map","song","to","_id","src","albumCover","alt","title","artist","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Musync/frontend/src/pages/Search/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\r\nimport axios from 'axios';\r\nimport { SearchContainer, SearchInput, ResultsGrid, SongCard } from './SearchPage.styles';\r\n// import { Button } from '../../components/Button/Button'; // REMOVED: 'Button' is defined but never used\r\n\r\nconst SearchPage = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Use useCallback to memoize searchSongs, addressing the useEffect dependency warning\r\n  const searchSongs = useCallback(async () => {\r\n    if (!query.trim()) {\r\n      setResults([]); // Clear results if query is empty\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // --- CRITICAL FIX: Changed API endpoint to /api/songs/search ---\r\n      const res = await axios.get(`/api/songs/search?search=${query}`);\r\n      // Assuming res.data will be the array of songs directly.\r\n      // If your backend searchSongs controller returns an object like { success: true, data: [...] },\r\n      // then you might need to change setResults(res.data) to setResults(res.data.data).\r\n      setResults(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error searching songs:\", err.response?.data?.error || err.message);\r\n      setResults([]); // Clear results on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [query]); // query is now a dependency for useCallback\r\n\r\n  useEffect(() => {\r\n    const delayDebounce = setTimeout(() => {\r\n      // Only call searchSongs if there's a query\r\n      if (query) {\r\n        searchSongs();\r\n      } else {\r\n        setResults([]); // Clear results if query becomes empty while debouncing\r\n      }\r\n    }, 500);\r\n\r\n    return () => clearTimeout(delayDebounce);\r\n  }, [query, searchSongs]); // Added searchSongs to dependency array\r\n\r\n  return (\r\n    <SearchContainer>\r\n      <h2>Search Songs</h2>\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Search by song title, artist or album...\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n\r\n      {loading && <p>Loading...</p>}\r\n\r\n      <ResultsGrid>\r\n        {/* Only map if results exist and are an array */}\r\n        {results && Array.isArray(results) && results.map((song) => (\r\n          <SongCard key={song._id} to={`/song/${song._id}`}>\r\n            <img src={song.albumCover} alt={song.title} />\r\n            <h4>{song.title}</h4>\r\n            <p>{song.artist}</p>\r\n          </SongCard>\r\n        ))}\r\n      </ResultsGrid>\r\n\r\n      {!loading && results && results.length === 0 && query && (\r\n        <p>No results found for \"{query}\"</p>\r\n      )}\r\n      {/* Added handling for initial empty query (no results displayed) */}\r\n      {!loading && !query && results && results.length === 0 && (\r\n        <p>Start typing to search for songs.</p>\r\n      )}\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default SearchPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}